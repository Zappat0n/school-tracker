{"version":3,"sources":["storage/storage.js","api/requests.js","reducers/actions.js","reducers/userReducer.js","reducers/classroomTableReducer.js","containers/NavBar/NavBar.js","components/ErrorDisplayer/ErrorDisplayer.js","App.js","api/queries.js","containers/UserForm/UserForm.js","routes/SignIn/SignIn.js","routes/SignUp/SignUp.js","containers/Table/TableQueries.js","containers/Table/TableUtils.js","containers/Table/Row.js","containers/Table/Table.js","routes/Classrooms/Classrooms.js","routes/Students/Students.js","routes/PresentationAreas/PresentationAreas.js","routes/PresentationSubareas/PresentationSubareas.js","containers/TableClassroomScores/ComboBox.js","containers/TableClassroomScores/ClassroomRow.js","containers/TableClassroomScores/TableClassroomScores.js","routes/ClassroomScores/ClassroomScores.js","containers/TableStudentScores/Row.js","containers/TableStudentScores/TableStudentScores.js","routes/StudentScores/StudentScores.js","Routes.js","index.js"],"names":["storage","load","localStorage","getItem","JSON","parse","ex","save","token","stringify","require","config","signUpRequest","username","password","Request","process","method","headers","body","logInRequest","logOutRequest","Authorization","Buffer","from","toString","client_id","REACT_APP_CLIENT_ID","client_secret","REACT_APP_CLIENT_SECRET","postEventRequest","date","student","presentation","score","updateEventRequest","id","getIndexRequest","controller","SET_USERNAME","SET_TITLE","SAVE_SCORE","SAVE_SCORES","changeTitle","title","type","payload","saveScore","saveScores","scores","initialState","userReducer","state","action","actions","classroomTableReducer","forEach","event","presentation_id","student_id","NavBar","useSelector","toggleMenu","e","preventDefault","content","document","querySelector","classList","contains","remove","add","className","role","tabIndex","onKeyDown","onClick","to","ErrorDisplayer","messages","setMessages","useEffect","length","setInterval","clearInterval","Array","map","message","defaultProps","App","errors","setErrors","query","request","a","fetch","response","json","logIn","signUp","getIndex","postEvent","updateEvent","UserForm","props","handleError","useState","setPassword","history","useHistory","dispatch","useDispatch","getLogIn","getSignUp","target","value","push","handleChange","saveUsername","onSubmit","handleSubmit","htmlFor","onChange","autoComplete","SignIn","SignUp","getIndexTable","tableName","data","sections","split","requestTable","filterKeys","array","filter","key","includes","endsWith","getCommands","table","startsWith","name","route","Row","commands","Object","keys","index","command","replace","Table","setTable","text","charAt","toUpperCase","slice","toLowerCase","trim","row","undefined","Classrooms","useParams","Students","PresentationAreas","PresentationSubareas","ComboBox","getSign","ClassroomRow","students","TableClassroomScores","setStudents","presentations","setPresentations","getScore","events","eventId","Date","toISOString","requestData","concat","updateScore","ClassroomScores","TableStudentScores","StudentScores","Routes","basename","path","exact","rootReducer","combineReducers","ReactDOM","render","StrictMode","store","createStore","getElementById"],"mappings":"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","file":"static/js/main.fd807f1b.chunk.js","sourcesContent":["const storageManager = () => {\n  const load = () => {\n    const storage = localStorage.getItem('token');\n\n    try {\n      return storage ? JSON.parse(storage) : [];\n    } catch (ex) {\n      return [];\n    }\n  };\n\n  const save = (token) => {\n    localStorage.token = JSON.stringify(token);\n  };\n\n  return { load, save };\n};\n\nconst storage = storageManager();\n\nexport { storage as default };\n","import storage from '../storage/storage';\n\nrequire('dotenv').config();\n\nexport const signUpRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/users`,\n  {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: `{\n      \"user\" : {\n        \"username\" : \"${username}\",\n        \"password\" : \"${password}\",\n        \"password_confirmation\" : \"${password}\"\n      }\n    }`,\n  },\n);\n\nexport const logInRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/authentications`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n    },\n    body: `{\n      \"username\" : \"${username}\",\n      \"password\" : \"${password}\"\n    }`,\n  },\n);\n\nexport const logOutRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/oauth/revoke`,\n  {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`,\n    },\n    body: JSON.stringify({\n      token: storage.load(),\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\n    }),\n  },\n);\n\nexport const postEventRequest = (date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const updateEventRequest = (id, date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const getIndexRequest = (controller) => new Request(\n  `${process.env.REACT_APP_SERVER}/${controller}`,\n  {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${storage.load()}`,\n    },\n  },\n);\n","export const SET_USERNAME = 'SET_USERNAME';\nexport const SET_TITLE = 'SET_TITLE';\n\nexport const SAVE_SCORE = 'SAVE_SCORE';\nexport const SAVE_SCORES = 'SAVE_SCORES';\n\nexport const saveUsername = (username) => ({\n  type: SET_USERNAME,\n  payload: username,\n});\n\nexport const changeTitle = (title) => ({\n  type: SET_TITLE,\n  payload: title,\n});\n\n/* ------ */\n\nexport const saveScore = (score) => ({\n  type: SAVE_SCORE,\n  payload: score,\n});\n\nexport const saveScores = (scores) => ({\n  type: SAVE_SCORES,\n  payload: scores,\n});\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  username: '',\n  title: '',\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_USERNAME: return { ...state, username: action.payload };\n    case actions.SET_TITLE: return { ...state, title: action.payload };\n    default: return state;\n  }\n};\n\nexport default userReducer;\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  scores: {},\n};\n\nconst classroomTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SAVE_SCORE: {\n      const {\n        presentation, student, score, id,\n      } = action.payload;\n      state.scores[`${presentation}-${student}`] = { id, score };\n      return state;\n    }\n    case actions.SAVE_SCORES: {\n      action.payload.forEach(\n        (event) => {\n          state.scores[`${event.presentation_id}-${event.student_id}`] = { id: event.id, score: event.score };\n        },\n      );\n      return state;\n    }\n    default: return state;\n  }\n};\n\nexport default classroomTableReducer;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './NavBar.scss';\n\nconst NavBar = () => {\n  const title = useSelector((state) => state.title);\n\n  const toggleMenu = (e) => {\n    e.preventDefault();\n    const content = document.querySelector('.menu-content');\n    if (content.classList.contains('d-none')) {\n      content.classList.remove('d-none');\n    } else {\n      content.classList.add('d-none');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"nav-bar\">\n        <div className=\"left nav-col ta-left\">\n          <i id=\"menu-toggle\" role=\"menubar\" tabIndex={0} className=\"fas fa-bars\" onKeyDown={(e) => toggleMenu(e)} onClick={(e) => toggleMenu(e)} />\n        </div>\n        <div className=\"center nav-col ta-center\">\n          {title || 'Welcome'}\n        </div>\n        <div className=\"right nav-col ta-right\">\n          <Link to=\"/user/signin\" className=\"link\">\n            <i className=\"fas fa-user\" />\n          </Link>\n        </div>\n      </div>\n      <div className=\"menu-content d-none\">\n        <Link to=\"/classrooms/\" className=\"link\">Classrooms</Link>\n        <Link to=\"/presentation_areas/\" className=\"link\">Curriculum</Link>\n        <Link to=\"/presentation_subareas/\" className=\"link\">Subareas</Link>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport './ErrorDisplayer.scss';\n\nconst ErrorDisplayer = ({ messages, setMessages }) => {\n  useEffect(() => {\n    if (!messages || messages.length === 0) return null;\n\n    const id = setInterval(() => {\n      setMessages([]);\n    }, 3000);\n    return () => clearInterval(id);\n  });\n\n  const displayErrors = () => {\n    if (messages instanceof Array) {\n      return messages.map((message) => (<p key={message}>{message}</p>));\n    }\n    return messages;\n  };\n\n  return (\n    <div className=\"errors\">\n      {displayErrors()}\n    </div>\n  );\n};\n\nErrorDisplayer.defaultProps = {\n  messages: [],\n};\n\nErrorDisplayer.propTypes = {\n  messages: PropTypes.instanceOf(Object),\n  setMessages: PropTypes.func.isRequired,\n};\n\nexport default ErrorDisplayer;\n","import PropTypes from 'prop-types';\nimport NavBar from './containers/NavBar/NavBar';\nimport ErrorDisplayer from './components/ErrorDisplayer/ErrorDisplayer';\n\nconst App = ({ errors, setErrors }) => (\n  <>\n    <header>\n      <NavBar />\n      <ErrorDisplayer messages={errors} setMessages={(messages) => setErrors(messages)} />\n    </header>\n  </>\n);\n\nApp.defaultProps = {\n  errors: [],\n};\n\nApp.propTypes = {\n  errors: PropTypes.instanceOf(Object),\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default App;\n","import {\n  signUpRequest, logInRequest, logOutRequest, getIndexRequest, postEventRequest, updateEventRequest,\n} from './requests';\n\nasync function query(request) {\n  try {\n    const response = await fetch(request);\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    return null;\n  }\n}\n\nconst logIn = async (username, password) => query(logInRequest(username, password));\n\nasync function signUp(username, password) {\n  const response = await query(signUpRequest(username, password));\n  return response;\n}\n\nasync function getIndex(controller) {\n  const request = getIndexRequest(controller);\n  const response = await query(request);\n  return response;\n}\n\nasync function postEvent(date, student, presentation, score) {\n  const request = postEventRequest(date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function updateEvent(id, date, student, presentation, score) {\n  const request = updateEventRequest(id, date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function logOut(username, password) {\n  return query(logOutRequest(username, password));\n}\n\nexport {\n  logIn, signUp, logOut, getIndex, postEvent, updateEvent,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logIn, signUp } from '../../api/queries';\nimport { changeTitle, saveUsername } from '../../reducers/actions';\nimport './UserForm.scss';\nimport storage from '../../storage/storage';\n\nconst UserForm = (props) => {\n  const { action, handleError } = props;\n  const username = useSelector((state) => state.userReducer.username);\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  async function getLogIn(username, password) {\n    const response = await logIn(username, password);\n    if (response && response.token) {\n      storage.save(response.token);\n      return true;\n    }\n    handleError(response.errors);\n    return false;\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(action));\n  }, []);\n\n  async function getSignUp(username, password) {\n    const response = await signUp(username, password);\n    if (response && response.username) return (response && getLogIn(username, password));\n    handleError(response.errors);\n    return false;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const { username, password } = event.target;\n\n    if (action === 'Log In') {\n      const response = await getLogIn(username.value, password.value);\n      if (response) {\n        history.push('/classrooms/');\n      }\n    } else {\n      const response = await getSignUp(username.value, password.value);\n      if (response) {\n        history.push('/classrooms/');\n      }\n    }\n    return false;\n  }\n\n  const handleChange = (event, id) => {\n    event.preventDefault();\n    if (id === 'username') dispatch(saveUsername(event.target.value));\n    else setPassword(event.target.value);\n  };\n\n  return (\n    <form className=\"user-form table\" onSubmit={(event) => handleSubmit(event)}>\n      <section className=\"username\">\n        <label htmlFor=\"username\">\n          Username\n          <input id=\"username\" type=\"text\" value={username} onChange={(event) => handleChange(event, 'username')} />\n        </label>\n      </section>\n      <section className=\"password\">\n        <label htmlFor=\"password\">\n          Password\n          <input id=\"password\" type=\"password\" autoComplete=\"on\" value={password} onChange={(event) => handleChange(event, 'password')} />\n        </label>\n      </section>\n      <section className=\"buttons\">\n        <button className=\"submit\" type=\"submit\">\n          {action}\n        </button>\n        <div className=\"link-container\">\n          {action === 'Log In' ? <Link to=\"/user/signup\" className=\"link\">Sign up</Link> : <Link to=\"/user/signin\" className=\"link\">Log In</Link> }\n        </div>\n      </section>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  action: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default UserForm;\n","import PropTypes from 'prop-types';\nimport UserForm from '../../containers/UserForm/UserForm';\n\nconst SignIn = ({ setErrors }) => (\n  <UserForm action=\"Log In\" handleError={(messages) => setErrors(messages)} />\n);\n\nSignIn.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default SignIn;\n","import PropTypes from 'prop-types';\nimport UserForm from '../../containers/UserForm/UserForm';\n\nconst SignUp = ({ setErrors }) => (\n  <UserForm\n    action=\"Sign Up\"\n    handleError={(messages) => setErrors(messages)}\n  />\n);\n\nSignUp.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default SignUp;\n","import { getIndex } from '../../api/queries';\n\nasync function getIndexTable(tableName) {\n  const response = await getIndex(tableName);\n  return {\n    tableName,\n    data: response,\n  };\n}\n\nasync function requestTable(request) {\n  const sections = request.split('/');\n  switch (sections[0]) {\n    case 'classrooms':\n    case 'students':\n    case 'presentation_areas':\n    case 'presentation_subareas': return getIndexTable(request);\n    default: return null;\n  }\n}\n\nexport default requestTable;\n","const filterKeys = (array) => array.filter((key) => (!['id', 'created_at', 'updated_at'].includes(key) && !key.endsWith('_id')));\n\nconst getCommands = (table) => {\n  if (table.startsWith('classrooms')) {\n    if (table.includes('/')) {\n      return [{ name: 'scores', route: '/students/:id' }];\n    }\n    return [\n      { name: 'list', route: '/classrooms/:id' },\n      { name: 'scores', route: '/events/:id' },\n    ];\n  }\n\n  if (table.startsWith('presentation_areas')) {\n    if (table.includes('/')) {\n      return [\n        { name: 'list', route: '/presentation_subareas/:id' },\n      ];\n    }\n    return [\n      { name: 'list', route: '/presentation_areas/:id' },\n    ];\n  }\n\n  if (table.startsWith('presentation_subareas')) {\n    if (table.includes('/')) return [];\n    return [\n      { name: 'list', route: '/presentation_subareas/:id' },\n    ];\n  }\n\n  if (table.includes('/')) return [];\n  return [\n    { name: 'list', route: '' },\n  ];\n};\n\nexport { getCommands, filterKeys };\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from './TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport requestTable from './TableQueries';\nimport { changeTitle } from '../../reducers/actions';\nimport { filterKeys, getCommands } from './TableUtils';\nimport Row from './Row';\nimport './Table.scss';\n\nconst Table = ({\n  tableName, id, title, handleError,\n}) => {\n  const request = `${tableName}${id ? `/${id}` : ''}`;\n  const commands = getCommands(request);\n  const [table, setTable] = useState([]);\n  const dispatch = useDispatch();\n\n  async function query() {\n    const response = await requestTable(request);\n    if (response && response.data) setTable(response.data);\n    else handleError(response.errors);\n  }\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    query();\n    dispatch(changeTitle(title));\n  }, [request]);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  id: undefined,\n};\n\nTable.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default Table;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst Classrooms = ({ setErrors }) => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Table\n        tableName=\"classrooms\"\n        id={id}\n        handleError={(messages) => setErrors(messages)}\n        title={id ? 'Students' : 'Classrooms'}\n        commands={\n        [\n          {\n            className: 'fas fa-list',\n            route: '/classrooms/:id',\n          },\n          {\n            className: 'fas fa-th',\n            route: '/classrooms/:id/scores',\n          },\n        ]\n        }\n      />\n    </>\n  );\n};\n\nClassrooms.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default Classrooms;\n","import PropTypes from 'prop-types';\nimport Table from '../../containers/Table/Table';\n\nconst Students = ({ setErrors }) => (\n  <>\n    <Table\n      tableName=\"students\"\n      title=\"Students\"\n      handleError={(messages) => setErrors(messages)}\n    />\n  </>\n);\n\nStudents.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default Students;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationAreas = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table\n        tableName=\"presentation_areas\"\n        id={id}\n        title={id ? 'Presentation Subareas' : 'Presentation Areas'}\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nPresentationAreas.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default PresentationAreas;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationSubareas = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table\n        tableName=\"presentation_subareas\"\n        id={id}\n        title={id ? 'Presentations' : 'Presentation Subareas'}\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nPresentationSubareas.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default PresentationSubareas;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst ComboBox = (props) => {\n  const { presentation, student, handleChange } = props;\n  const score = useSelector((state) => state.classroomTableReducer.scores[`${presentation}-${student}`] || 0);\n\n  const getSign = () => {\n    switch (score.score) {\n      case 0: return ' ';\n      case 1: return '/';\n      case 2: return 'ꓥ';\n      case 3: return '𐊅';\n      default: return '';\n    }\n  };\n\n  return (\n    <td>\n      <select className=\"combo\" id={score.id} presentation={presentation} student={student} onChange={(event) => handleChange(event, presentation, student, score.id)} value={getSign()}>\n        <option value=\" \"> </option>\n        <option value=\"/\">/</option>\n        <option value=\"ꓥ\">ꓥ</option>\n        <option value=\"𐊅\">𐊅</option>\n      </select>\n    </td>\n  );\n};\n\nComboBox.propTypes = {\n  presentation: PropTypes.number.isRequired,\n  student: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ComboBox;\n","import PropTypes from 'prop-types';\nimport ComboBox from './ComboBox';\n\nconst ClassroomRow = ({ presentation, students, handleChange }) => (\n  <>\n    <tr className=\"row\">\n      <td>{presentation.name}</td>\n      {\n      (students || []).map((student) => (\n        <ComboBox\n          key={student.id}\n          presentation={presentation.id}\n          student={student.id}\n          handleChange={(event, presentation, student, id) => {\n            handleChange(event, presentation, student, id);\n          }}\n        />\n      ))\n      }\n    </tr>\n  </>\n);\n\nClassroomRow.propTypes = {\n  presentation: PropTypes.instanceOf(Object).isRequired,\n  students: PropTypes.instanceOf(Object).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ClassroomRow;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  saveScore, saveScores, changeTitle,\n} from '../../reducers/actions';\nimport { getIndex, postEvent, updateEvent } from '../../api/queries';\nimport ClassroomRow from './ClassroomRow';\nimport './TableClassroomScores.scss';\n\nconst TableClassroomScores = ({ id, title, handleError }) => {\n  const request = `events/${id}`;\n  const [students, setStudents] = useState([]);\n  const [presentations, setPresentations] = useState([]);\n  const dispatch = useDispatch();\n\n  const getScore = (value) => {\n    switch (value) {\n      case ' ': return 0;\n      case '/': return 1;\n      case 'ꓥ': return 2;\n      case '𐊅': return 3;\n      default: return '';\n    }\n  };\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) {\n      setStudents(response.data.students);\n      setPresentations(response.data.presentations);\n      dispatch(saveScores(response.data.events));\n    } else handleError(response.errors);\n  }\n\n  async function updateScore(event, presentation, student, eventId) {\n    event.preventDefault();\n    const score = getScore(event.target.value);\n    const response = (!eventId) ? await postEvent(new Date().toISOString().split('T')[0], student, presentation, score)\n      : await updateEvent(eventId, new Date().toISOString().split('T')[0], student, presentation, score);\n\n    if (response) {\n      dispatch(saveScore({\n        id: response.id,\n        presentation,\n        student,\n        score,\n      }));\n    } else handleError(response.errors);\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table-scores\">\n      {students && students.length > 0 && presentations.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-classroom-head\">\n              <tr>\n                {(students ? [{ id: 0 }].concat(students) : []).map(\n                  (student, index) => (\n                    <th className={`column${index + 1}`} key={student.id}>\n                      <Link to={`/students/${student.id}`} className=\"head-link\">\n                        {student.name}\n                      </Link>\n                    </th>\n                  ),\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"table-classroom-body\">\n              {\n              (presentations ? presentations.slice(0, 10) : []).map(\n                (presentation) => (\n                  <ClassroomRow\n                    key={presentation.id}\n                    presentation={presentation}\n                    students={students}\n                    handleChange={\n                      (event, presentation, student, id) => {\n                        updateScore(event, presentation, student, id);\n                      }\n                    }\n                  />\n                ),\n              )\n              }\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableClassroomScores.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default TableClassroomScores;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport TableClassroomScores from '../../containers/TableClassroomScores/TableClassroomScores';\n\nconst ClassroomScores = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableClassroomScores\n        id={id}\n        title=\"Classroom Scores\"\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nClassroomScores.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default ClassroomScores;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from '../Table/TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTitle } from '../../reducers/actions';\nimport { getIndex } from '../../api/queries';\nimport { filterKeys, getCommands } from '../Table/TableUtils';\nimport Row from './Row';\nimport '../Table/Table.scss';\n\nconst TableStudentScores = ({ id, title, handleError }) => {\n  const request = `/students/${id}`;\n  const commands = getCommands(request);\n  const [table, setTable] = useState([]);\n  const dispatch = useDispatch();\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) setTable(response);\n    else handleError(response.errors);\n  }\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableStudentScores.defaultProps = {\n  id: undefined,\n};\n\nTableStudentScores.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default TableStudentScores;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport TableStudentScores from '../../containers/TableStudentScores/TableStudentScores';\n\nconst StudentScores = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableStudentScores\n        id={id}\n        title=\"Student scores\"\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nStudentScores.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default StudentScores;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport SignIn from './routes/SignIn/SignIn';\nimport SignUp from './routes/SignUp/SignUp';\nimport Classrooms from './routes/Classrooms/Classrooms';\nimport Students from './routes/Students/Students';\nimport PresentationAreas from './routes/PresentationAreas/PresentationAreas';\nimport PresentationSubareas from './routes/PresentationSubareas/PresentationSubareas';\nimport ClassroomScores from './routes/ClassroomScores/ClassroomScores';\nimport StudentScores from './routes/StudentScores/StudentScores';\n\nconst Routes = () => {\n  const [errors, setErrors] = useState([]);\n  return (\n    <BrowserRouter basename=\"/school-tracker/\">\n      <Switch>\n        <Route path=\"/\">\n          <App messages={errors} setErrors={(messages) => setErrors(messages)} />\n          <Route path=\"/user/signin\"><SignIn setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route path=\"/user/signup\"><SignUp setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route exact path=\"/classrooms\"><Classrooms setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route exact path=\"/classrooms/:id\"><Classrooms setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route exact path=\"/students\"><Students setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route exact path=\"/presentation_areas\"><PresentationAreas setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route path=\"/presentation_areas/:id\"><PresentationAreas setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route exact path=\"/presentation_subareas\"><PresentationSubareas setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route path=\"/presentation_subareas/:id\"><PresentationSubareas setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route path=\"/events/:id\"><ClassroomScores setErrors={(messages) => setErrors(messages)} /></Route>\n          <Route path=\"/students/:id\"><StudentScores setErrors={(messages) => setErrors(messages)} /></Route>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport userReducer from './reducers/userReducer';\nimport classroomTableReducer from './reducers/classroomTableReducer';\nimport './index.scss';\nimport Routes from './Routes';\n\nconst rootReducer = combineReducers({\n  userReducer,\n  classroomTableReducer,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(rootReducer)}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}