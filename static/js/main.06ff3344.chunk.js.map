{"version":3,"sources":["storage/storage.js","api/requests.js","reducers/actions.js","reducers/userReducer.js","reducers/classroomTableReducer.js","constants.js","containers/NavBar/NavBar.js","api/queries.js","containers/UserForm/UserForm.js","routes/SignIn/SignIn.js","routes/SignUp/SignUp.js","containers/Table/TableQueries.js","containers/Table/TableUtils.js","containers/Table/Row.js","containers/Table/Table.js","routes/Classrooms/Classrooms.js","routes/Students/Students.js","containers/ErrorDisplayer/ErrorDisplayer.js","routes/PresentationAreas/PresentationAreas.js","routes/PresentationSubareas/PresentationSubareas.js","containers/TableClassroomScores/ComboBox.js","containers/TableClassroomScores/ClassroomRow.js","containers/TableClassroomScores/TableClassroomScores.js","routes/ClassroomScores/ClassroomScores.js","containers/TableStudentScores/Row.js","containers/TableStudentScores/TableStudentScores.js","routes/StudentScores/StudentScores.js","Routes.js","index.js"],"names":["storage","load","localStorage","getItem","JSON","parse","ex","save","token","stringify","require","config","signUpRequest","username","password","Request","process","method","headers","body","logInRequest","logOutRequest","Authorization","Buffer","from","toString","client_id","client_secret","postEventRequest","date","student","presentation","score","updateEventRequest","id","getIndexRequest","controller","SET_USERNAME","SET_PASSWORD","SET_TITLE","SET_TOKEN","SET_ERROR","ADD_TABLE","SAVE_SCORE","SAVE_STUDENTS","SAVE_PRESENTATIONS","SAVE_SCORES","savePassword","type","payload","changeTitle","title","setError","errors","addTable","table","saveScore","saveStudents","students","savePresentations","presentations","saveScores","scores","initialState","tables","userReducer","state","action","actions","tableName","data","classroomTableReducer","forEach","event","presentation_id","student_id","REACT_APP_NAME","NavBar","useSelector","toggleMenu","e","preventDefault","content","document","querySelector","classList","contains","remove","add","className","role","tabIndex","onKeyDown","onClick","to","query","request","a","fetch","response","json","logIn","signUp","getIndex","postEvent","updateEvent","UserForm","props","history","useHistory","dispatch","useDispatch","getLogIn","getSignUp","target","value","push","useEffect","handleChange","saveUsername","onSubmit","handleSubmit","htmlFor","onChange","autoComplete","SignIn","SignUp","getIndexTable","sections","split","requestTable","filterKeys","array","filter","key","includes","endsWith","getCommands","startsWith","name","route","Row","commands","Object","keys","map","index","length","command","replace","Table","text","charAt","toUpperCase","slice","toLowerCase","trim","row","defaultProps","undefined","Classrooms","useParams","Students","ErrorDisplayer","messages","setInterval","clearInterval","message","PresentationAreas","PresentationSubareas","ComboBox","getSign","ClassroomRow","presentationId","TableClassroomScores","getScore","events","eventId","Date","toISOString","requestData","concat","updateScore","ClassroomScores","TableStudentScores","StudentScores","Routes","path","exact","rootReducer","combineReducers","ReactDOM","render","StrictMode","store","createStore","getElementById"],"mappings":"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","file":"static/js/main.06ff3344.chunk.js","sourcesContent":["const storageManager = () => {\n  const load = () => {\n    const storage = localStorage.getItem('token');\n\n    try {\n      return storage ? JSON.parse(storage) : [];\n    } catch (ex) {\n      return [];\n    }\n  };\n\n  const save = (token) => {\n    localStorage.token = JSON.stringify(token);\n  };\n\n  return { load, save };\n};\n\nconst storage = storageManager();\n\nexport { storage as default };\n","import storage from '../storage/storage';\n\nrequire('dotenv').config();\n\nexport const signUpRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/users`,\n  {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: `{\n      \"user\" : {\n        \"username\" : \"${username}\",\n        \"password\" : \"${password}\",\n        \"password_confirmation\" : \"${password}\"\n      }\n    }`,\n  },\n);\n\nexport const logInRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/auth/login`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n    },\n    body: `{\n      \"username\" : \"${username}\",\n      \"password\" : \"${password}\"\n    }`,\n  },\n);\n\nexport const logOutRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/oauth/revoke`,\n  {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`,\n    },\n    body: JSON.stringify({\n      token: storage.load(),\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\n    }),\n  },\n);\n\nexport const postEventRequest = (date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const updateEventRequest = (id, date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const getIndexRequest = (controller) => new Request(\n  `${process.env.REACT_APP_SERVER}/${controller}`,\n  {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${storage.load()}`,\n    },\n  },\n);\n","export const SET_USERNAME = 'SET_USERNAME';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_ERROR = 'SET_ERROR';\nexport const ADD_TABLE = 'ADD_TABLE';\n\nexport const SAVE_SCORE = 'SAVE_SCORE';\nexport const SAVE_STUDENTS = 'SAVE_STUDENTS';\nexport const SAVE_PRESENTATIONS = 'SAVE_PRESENTATIONS';\nexport const SAVE_SCORES = 'SAVE_SCORES';\n\nexport const saveUsername = (username) => ({\n  type: SET_USERNAME,\n  payload: username,\n});\n\nexport const savePassword = (password) => ({\n  type: SET_PASSWORD,\n  payload: password,\n});\n\nexport const changeTitle = (title) => ({\n  type: SET_TITLE,\n  payload: title,\n});\n\nexport const saveToken = (token) => ({\n  type: SET_TOKEN,\n  payload: token,\n});\n\nexport const setError = (errors) => ({\n  type: SET_ERROR,\n  payload: errors,\n});\n\nexport const addTable = (table) => ({\n  type: ADD_TABLE,\n  payload: table,\n});\n\n/* ------ */\n\nexport const saveScore = (score) => ({\n  type: SAVE_SCORE,\n  payload: score,\n});\n\nexport const saveStudents = (students) => ({\n  type: SAVE_STUDENTS,\n  payload: students,\n});\n\nexport const savePresentations = (presentations) => ({\n  type: SAVE_PRESENTATIONS,\n  payload: presentations,\n});\n\nexport const saveScores = (scores) => ({\n  type: SAVE_SCORES,\n  payload: scores,\n});\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  username: '',\n  password: '',\n  title: '',\n  token: '',\n  errors: [],\n  tables: {},\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_USERNAME: return { ...state, username: action.payload };\n    case actions.SET_PASSWORD: return { ...state, password: action.payload };\n    case actions.SET_TITLE: return { ...state, title: action.payload };\n    case actions.SET_TOKEN: return { ...state, token: action.payload };\n    case actions.SET_ERROR: return { ...state, errors: action.payload };\n    case actions.ADD_TABLE: return {\n      ...state,\n      tables: {\n        [action.payload.tableName]: { headers: action.payload.headers, data: action.payload.data },\n      },\n    };\n    default: return state;\n  }\n};\n\nexport default userReducer;\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  students: [],\n  presentations: [],\n  scores: {},\n};\n\nconst classroomTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SAVE_SCORE: {\n      const {\n        presentation, student, score, id,\n      } = action.payload;\n      state.scores[`${presentation}-${student}`] = { id, score };\n      return state;\n    }\n    case actions.SAVE_STUDENTS: return { ...state, students: action.payload };\n    case actions.SAVE_PRESENTATIONS: return { ...state, presentations: action.payload };\n    case actions.SAVE_SCORES: {\n      action.payload.forEach(\n        (event) => {\n          state.scores[`${event.presentation_id}-${event.student_id}`] = { id: event.id, score: event.score };\n        },\n      );\n      return state;\n    }\n    default: return state;\n  }\n};\n\nexport default classroomTableReducer;\n","const REACT_APP_NAME = '/school-tracker';\n\nexport default REACT_APP_NAME;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport REACT_APP_NAME from '../../constants';\nimport './NavBar.scss';\n\nconst NavBar = () => {\n  const title = useSelector((state) => state.title);\n\n  const toggleMenu = (e) => {\n    e.preventDefault();\n    const content = document.querySelector('.menu-content');\n    if (content.classList.contains('d-none')) {\n      content.classList.remove('d-none');\n    } else {\n      content.classList.add('d-none');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"nav-bar\">\n        <div className=\"left nav-col ta-left\">\n          <i id=\"menu-toggle\" role=\"menubar\" tabIndex={0} className=\"fas fa-bars\" onKeyDown={(e) => toggleMenu(e)} onClick={(e) => toggleMenu(e)} />\n        </div>\n        <div className=\"center nav-col ta-center\">\n          {title || 'Welcome'}\n        </div>\n        <div className=\"right nav-col ta-right\">\n          <Link to={`${REACT_APP_NAME}/user/signin`} className=\"link\">\n            <i className=\"fas fa-user\" />\n          </Link>\n        </div>\n      </div>\n      <div className=\"menu-content d-none\">\n        <Link to={`${REACT_APP_NAME}/classrooms/`} className=\"link\">Classrooms</Link>\n        <Link to={`${REACT_APP_NAME}/presentation_areas/`} className=\"link\">Curriculum</Link>\n        <Link to={`${REACT_APP_NAME}/presentation_subareas/`} className=\"link\">Subareas</Link>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","import {\n  signUpRequest, logInRequest, logOutRequest, getIndexRequest, postEventRequest, updateEventRequest,\n} from './requests';\n\nasync function query(request) {\n  try {\n    const response = await fetch(request);\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    return null;\n  }\n}\n\nconst logIn = async (username, password) => query(logInRequest(username, password));\n\nasync function signUp(username, password) {\n  const response = await query(signUpRequest(username, password));\n  return response;\n}\n\nasync function getIndex(controller) {\n  const request = getIndexRequest(controller);\n  const response = await query(request);\n  return response;\n}\n\nasync function postEvent(date, student, presentation, score) {\n  const request = postEventRequest(date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function updateEvent(id, date, student, presentation, score) {\n  const request = updateEventRequest(id, date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function logOut(username, password) {\n  return query(logOutRequest(username, password));\n}\n\nexport {\n  logIn, signUp, logOut, getIndex, postEvent, updateEvent,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logIn, signUp } from '../../api/queries';\nimport {\n  changeTitle, saveUsername, savePassword, setError,\n} from '../../reducers/actions';\nimport REACT_APP_NAME from '../../constants';\nimport './UserForm.scss';\nimport storage from '../../storage/storage';\n\nconst UserForm = (props) => {\n  const { action } = props;\n  const username = useSelector((state) => state.userReducer.username);\n  const password = useSelector((state) => state.userReducer.password);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  async function getLogIn(username, password) {\n    const response = await logIn(username, password);\n    if (response && response.token) {\n      storage.save(response.token);\n      return true;\n    }\n    dispatch(setError(response.errors));\n    return false;\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(action));\n  }, []);\n\n  async function getSignUp(username, password) {\n    const response = await signUp(username, password);\n    if (response && response.username) return (response && getLogIn(username, password));\n    dispatch(setError(response.errors));\n    return false;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const { username, password } = event.target;\n\n    if (action === 'Log In') {\n      const response = await getLogIn(username.value, password.value);\n      if (response) {\n        history.push(`${REACT_APP_NAME}/classrooms/`);\n        dispatch(savePassword(''));\n      }\n    } else {\n      const response = await getSignUp(username.value, password.value);\n      if (response) {\n        history.push(`${REACT_APP_NAME}/classrooms/`);\n        dispatch(savePassword(''));\n      }\n    }\n    return false;\n  }\n\n  const handleChange = (event, id) => {\n    event.preventDefault();\n    if (id === 'username') dispatch(saveUsername(event.target.value));\n    else dispatch(savePassword(event.target.value));\n  };\n\n  return (\n    <form className=\"user-form table\" onSubmit={(event) => handleSubmit(event)}>\n      <section className=\"username\">\n        <label htmlFor=\"username\">\n          Username\n          <input id=\"username\" type=\"text\" value={username} onChange={(event) => handleChange(event, 'username')} />\n        </label>\n      </section>\n      <section className=\"password\">\n        <label htmlFor=\"password\">\n          Password\n          <input id=\"password\" type=\"password\" autoComplete=\"on\" value={password} onChange={(event) => handleChange(event, 'password')} />\n        </label>\n      </section>\n      <section className=\"buttons\">\n        <button className=\"submit\" type=\"submit\">\n          {action}\n        </button>\n        <div className=\"link-container\">\n          {action === 'Log In' ? <Link to={`${REACT_APP_NAME}/user/signup`} className=\"link\">Sign up</Link> : <Link to={`${REACT_APP_NAME}/user/signin`} className=\"link\">Log In</Link> }\n        </div>\n      </section>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  action: PropTypes.string.isRequired,\n};\n\nexport default UserForm;\n","import UserForm from '../../containers/UserForm/UserForm';\n\nconst SignIn = () => (\n  <UserForm action=\"Log In\" />\n);\n\nexport default SignIn;\n","import UserForm from '../../containers/UserForm/UserForm';\n\nconst SignUp = () => (\n  <UserForm action=\"Sign Up\" />\n);\n\nexport default SignUp;\n","import { getIndex } from '../../api/queries';\n\nasync function getIndexTable(tableName) {\n  const response = await getIndex(tableName);\n  return {\n    tableName,\n    data: response,\n  };\n}\n\nasync function requestTable(request) {\n  const sections = request.split('/');\n  switch (sections[0]) {\n    case 'classrooms':\n    case 'students':\n    case 'presentation_areas':\n    case 'presentation_subareas': return getIndexTable(request);\n    default: return null;\n  }\n}\n\nexport default requestTable;\n","import REACT_APP_NAME from '../../constants';\n\nconst filterKeys = (array) => array.filter((key) => (!['id', 'created_at', 'updated_at'].includes(key) && !key.endsWith('_id')));\n\nconst getCommands = (table) => {\n  if (table.startsWith('classrooms')) {\n    if (table.includes('/')) {\n      return [{ name: 'scores', route: `${REACT_APP_NAME}/students/:id` }];\n    }\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/classrooms/:id` },\n      { name: 'scores', route: `${REACT_APP_NAME}/events/:id` },\n    ];\n  }\n\n  if (table.startsWith('presentation_areas')) {\n    if (table.includes('/')) {\n      return [\n        { name: 'list', route: `${REACT_APP_NAME}/presentation_subareas/:id` },\n      ];\n    }\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/presentation_areas/:id` },\n    ];\n  }\n\n  if (table.startsWith('presentation_subareas')) {\n    if (table.includes('/')) return [];\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/presentation_subareas/:id` },\n    ];\n  }\n\n  if (table.includes('/')) return [];\n  return [\n    { name: 'list', route: '' },\n  ];\n};\n\nexport { getCommands, filterKeys };\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from './TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport requestTable from './TableQueries';\nimport { addTable, changeTitle, setError } from '../../reducers/actions';\nimport { filterKeys, getCommands } from './TableUtils';\nimport Row from './Row';\nimport './Table.scss';\n\nconst Table = ({ tableName, id, title }) => {\n  const request = `${tableName}${id ? `/${id}` : ''}`;\n  const commands = getCommands(request);\n  const table = useSelector((state) => state.userReducer.tables[request]);\n  const dispatch = useDispatch();\n\n  async function query() {\n    const response = await requestTable(request);\n    if (response && response.data) dispatch(addTable(response));\n    else dispatch(setError(response.errors));\n  }\n\n  if (!table) query();\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  id: undefined,\n};\n\nTable.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Table;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst Classrooms = () => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Table\n        tableName=\"classrooms\"\n        id={id}\n        title={id ? 'Students' : 'Classrooms'}\n        commands={\n        [\n          {\n            className: 'fas fa-list',\n            route: '/classrooms/:id',\n          },\n          {\n            className: 'fas fa-th',\n            route: '/classrooms/:id/scores',\n          },\n        ]\n        }\n      />\n    </>\n  );\n};\nexport default Classrooms;\n","import Table from '../../containers/Table/Table';\n\nconst Students = () => (\n  <>\n    <Table tableName=\"students\" title=\"Students\" />\n  </>\n);\n\nexport default Students;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setError } from '../../reducers/actions';\nimport './ErrorDisplayer.scss';\n\nconst ErrorDisplayer = () => {\n  const messages = useSelector((state) => state.userReducer.errors || []);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (messages.length === 0) return null;\n\n    const id = setInterval(() => {\n      dispatch(setError([]));\n    }, 3000);\n    return () => clearInterval(id);\n  });\n\n  return (\n    <div className=\"errors\">\n      {messages.map((message) => (<p key={message}>{message}</p>))}\n    </div>\n  );\n};\n\nexport default ErrorDisplayer;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationAreas = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table tableName=\"presentation_areas\" id={id} title={id ? 'Presentation Subareas' : 'Presentation Areas'} />\n    </>\n  );\n};\nexport default PresentationAreas;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationSubareas = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table tableName=\"presentation_subareas\" id={id} title={id ? 'Presentations' : 'Presentation Subareas'} />\n    </>\n  );\n};\nexport default PresentationSubareas;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst ComboBox = (props) => {\n  const { presentation, student, handleChange } = props;\n  const score = useSelector((state) => state.classroomTableReducer.scores[`${presentation}-${student}`] || 0);\n\n  const getSign = () => {\n    switch (score.score) {\n      case 0: return ' ';\n      case 1: return '/';\n      case 2: return 'ꓥ';\n      case 3: return '𐊅';\n      default: return '';\n    }\n  };\n\n  return (\n    <td>\n      <select className=\"combo\" id={score.id} presentation={presentation} student={student} onChange={(event) => handleChange(event, presentation, student, score.id)} value={getSign()}>\n        <option value=\" \"> </option>\n        <option value=\"/\">/</option>\n        <option value=\"ꓥ\">ꓥ</option>\n        <option value=\"𐊅\">𐊅</option>\n      </select>\n    </td>\n  );\n};\n\nComboBox.propTypes = {\n  presentation: PropTypes.number.isRequired,\n  student: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ComboBox;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ComboBox from './ComboBox';\n\nconst ClassroomRow = ({ presentationId, handleChange }) => {\n  const presentation = useSelector(\n    (state) => state.classroomTableReducer.presentations.filter(\n      (value) => value.id === presentationId,\n    )[0],\n  );\n  const students = useSelector((state) => state.classroomTableReducer.students);\n\n  return (\n    <>\n      <tr className=\"row\">\n        <td>{presentation.name}</td>\n        {\n        (students || []).map((student) => (\n          <ComboBox\n            key={student.id}\n            presentation={presentationId}\n            student={student.id}\n            handleChange={(event, presentation, student, id) => {\n              handleChange(event, presentation, student, id);\n            }}\n          />\n        ))\n        }\n      </tr>\n    </>\n  );\n};\n\nClassroomRow.propTypes = {\n  presentationId: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ClassroomRow;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  saveScore, savePresentations, saveScores, saveStudents, changeTitle, setError,\n} from '../../reducers/actions';\nimport { getIndex, postEvent, updateEvent } from '../../api/queries';\nimport ClassroomRow from './ClassroomRow';\nimport REACT_APP_NAME from '../../constants';\nimport './TableClassroomScores.scss';\n\nconst TableClassroomScores = ({ id, title }) => {\n  const request = `events/${id}`;\n  const table = useSelector((state) => state.classroomTableReducer);\n  const dispatch = useDispatch();\n\n  const getScore = (value) => {\n    switch (value) {\n      case ' ': return 0;\n      case '/': return 1;\n      case 'ꓥ': return 2;\n      case '𐊅': return 3;\n      default: return '';\n    }\n  };\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) {\n      dispatch(saveStudents(response.data.students));\n      dispatch(savePresentations(response.data.presentations));\n      dispatch(saveScores(response.data.events));\n    } else dispatch(setError(response.errors));\n  }\n\n  async function updateScore(event, presentation, student, eventId) {\n    event.preventDefault();\n    const score = getScore(event.target.value);\n    const response = (!eventId) ? await postEvent(new Date().toISOString().split('T')[0], student, presentation, score)\n      : await updateEvent(eventId, new Date().toISOString().split('T')[0], student, presentation, score);\n\n    if (response) {\n      dispatch(saveScore({\n        id: response.id,\n        presentation,\n        student,\n        score,\n      }));\n    } else dispatch(setError(response.errors));\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table-scores\">\n      {table.students.length > 0 && table.presentations.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-classroom-head\">\n              <tr>\n                {(table.students ? [{ id: 0 }].concat(table.students) : []).map(\n                  (student, index) => (\n                    <th className={`column${index + 1}`} key={student.id}>\n                      <Link to={`${REACT_APP_NAME}/students/${student.id}`} className=\"head-link\">\n                        {student.name}\n                      </Link>\n                    </th>\n                  ),\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"table-classroom-body\">\n              {\n              (table.presentations ? table.presentations.slice(0, 10) : []).map(\n                (presentation) => (\n                  <ClassroomRow\n                    key={presentation.id}\n                    presentationId={presentation.id}\n                    handleChange={\n                      (event, presentation, student, id) => {\n                        updateScore(event, presentation, student, id);\n                      }\n                    }\n                  />\n                ),\n              )\n              }\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableClassroomScores.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default TableClassroomScores;\n","import { useParams } from 'react-router-dom';\nimport TableClassroomScores from '../../containers/TableClassroomScores/TableClassroomScores';\n\nconst ClassroomScores = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableClassroomScores id={id} title=\"Classroom Scores\" />\n    </>\n  );\n};\n\nexport default ClassroomScores;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from '../Table/TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTable, changeTitle, setError } from '../../reducers/actions';\nimport { getIndex } from '../../api/queries';\nimport { filterKeys, getCommands } from '../Table/TableUtils';\nimport Row from './Row';\nimport '../Table/Table.scss';\n\nconst TableStudentScores = ({ id, title }) => {\n  const request = `/students/${id}`;\n  const commands = getCommands(request);\n  const table = useSelector((state) => state.userReducer.tables[request]);\n  const dispatch = useDispatch();\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) dispatch(addTable(response));\n    else dispatch(setError(response.errors));\n  }\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableStudentScores.defaultProps = {\n  id: undefined,\n};\n\nTableStudentScores.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default TableStudentScores;\n","import { useParams } from 'react-router-dom';\nimport TableStudentScores from '../../containers/TableStudentScores/TableStudentScores';\n\nconst StudentScores = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableStudentScores\n        id={id}\n        title=\"Student scores\"\n      />\n    </>\n  );\n};\n\nexport default StudentScores;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './containers/NavBar/NavBar';\nimport SignIn from './routes/SignIn/SignIn';\nimport SignUp from './routes/SignUp/SignUp';\nimport Classrooms from './routes/Classrooms/Classrooms';\nimport Students from './routes/Students/Students';\nimport ErrorDisplayer from './containers/ErrorDisplayer/ErrorDisplayer';\nimport PresentationAreas from './routes/PresentationAreas/PresentationAreas';\nimport PresentationSubareas from './routes/PresentationSubareas/PresentationSubareas';\nimport ClassroomScores from './routes/ClassroomScores/ClassroomScores';\nimport StudentScores from './routes/StudentScores/StudentScores';\nimport REACT_APP_NAME from './constants';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <header>\n      <NavBar />\n      <ErrorDisplayer message=\"\" />\n    </header>\n    <Switch>\n      <Route path={`${REACT_APP_NAME}/user/signin`}><SignIn /></Route>\n      <Route path={`${REACT_APP_NAME}/user/signup`}><SignUp /></Route>\n      <Route exact path={`${REACT_APP_NAME}/classrooms/`}><Classrooms /></Route>\n      <Route exact path={`${REACT_APP_NAME}/classrooms/:id`}><Classrooms /></Route>\n      <Route exact path={`${REACT_APP_NAME}/students`}><Students /></Route>\n      <Route exact path={`${REACT_APP_NAME}/presentation_areas`}><PresentationAreas /></Route>\n      <Route path={`${REACT_APP_NAME}/presentation_areas/:id`}><PresentationAreas /></Route>\n      <Route exact path={`${REACT_APP_NAME}/presentation_subareas`}><PresentationSubareas /></Route>\n      <Route path={`${REACT_APP_NAME}/presentation_subareas/:id`}><PresentationSubareas /></Route>\n      <Route path={`${REACT_APP_NAME}/events/:id`}><ClassroomScores /></Route>\n      <Route path={`${REACT_APP_NAME}/students/:id`}><StudentScores /></Route>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport userReducer from './reducers/userReducer';\nimport classroomTableReducer from './reducers/classroomTableReducer';\nimport './index.scss';\nimport Routes from './Routes';\n\nconst rootReducer = combineReducers({\n  userReducer,\n  classroomTableReducer,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(rootReducer)}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}