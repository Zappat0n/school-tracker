{"version":3,"sources":["api/requests.js","slices/userSlice.js","slices/classroomTableSlice.js","store.js","containers/NavBar/NavBar.js","api/queries.js","containers/UserForm/UserForm.js","routes/SignIn/SignIn.js","routes/SignUp/SignUp.js","containers/Table/TableQueries.js","containers/Table/TableUtils.js","containers/Table/Row.js","containers/Table/Table.js","routes/Classrooms/Classrooms.js","routes/Students/Students.js","routes/PresentationAreas/PresentationAreas.js","routes/PresentationSubareas/PresentationSubareas.js","containers/TableClassroomScores/ComboBox.js","containers/TableClassroomScores/ClassroomRow.js","containers/TableClassroomScores/TableClassroomScores.js","routes/ClassroomScores/ClassroomScores.js","containers/TableStudentScores/Row.js","containers/TableStudentScores/TableStudentScores.js","routes/StudentScores/StudentScores.js","Routes.js","index.js"],"names":["require","config","signUpRequest","email","password","Request","process","method","headers","body","logInRequest","logOutRequest","token","username","Authorization","Buffer","from","toString","JSON","stringify","client_id","client_secret","postEventRequest","date","student","presentation","score","updateEventRequest","id","getIndexRequest","controller","userSlice","createSlice","name","initialState","tables","title","reducers","save","state","action","payload","changeTitle","addTable","tableName","data","actions","classroomTableSlice","students","presentations","scores","saveScore","saveStudents","savePresentations","saveScores","forEach","event","presentation_id","student_id","store","configureStore","reducer","user","userReducer","classroomTable","classroomTableReducer","NavBar","useSelector","toggleMenu","e","preventDefault","content","document","querySelector","classList","contains","remove","add","className","role","tabIndex","onKeyDown","onClick","to","displayError","error","container","innerHTML","display","createElement","innerText","appendChild","setTimeout","query","request","a","fetch","response","json","logIn","signUp","getIndex","postEvent","updateEvent","UserForm","props","history","useHistory","dispatch","useDispatch","getLogIn","access_token","getSignUp","target","value","push","useEffect","onSubmit","submit","htmlFor","type","autoComplete","SignIn","SignUp","getIndexTable","sections","split","requestTable","filterKeys","array","filter","key","includes","endsWith","getCommands","table","startsWith","route","Row","commands","Object","keys","map","index","length","command","replace","Table","text","charAt","toUpperCase","slice","toLowerCase","trim","row","defaultProps","undefined","Classrooms","useParams","Students","PresentationAreas","PresentationSubareas","ComboBox","handleChange","onChange","getSign","ClassroomRow","presentationId","TableClassroomScores","getScore","events","updateScore","Date","toISOString","requestData","concat","ClassroomScores","TableStudentScores","StudentScores","Routes","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49d3adbe.chunk.js","sourcesContent":["require('dotenv').config();\n\nexport const signUpRequest = (email, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/users/`,\n  {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: `{\n      \"email\" : \"${email}\",\n      \"password\" : \"${password}\",\n      \"client_id\" : \"${process.env.REACT_APP_CLIENT_ID}\"\n    }`,\n  },\n);\n\nexport const logInRequest = (email, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/oauth/token/`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n    },\n    body: `{\n      \"grant_type\" : \"password\",\n      \"email\" : \"${email}\",\n      \"password\" : \"${password}\",\n      \"client_id\" : \"${process.env.REACT_APP_CLIENT_ID}\",\n      \"client_secret\" : \"${process.env.REACT_APP_CLIENT_SECRET}\"\n    }`,\n  },\n);\n\nexport const logOutRequest = (token, username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/oauth/revoke`,\n  {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`,\n    },\n    body: JSON.stringify({\n      token,\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\n    }),\n  },\n);\n\nexport const postEventRequest = (token, date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const updateEventRequest = (token, id, date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const getIndexRequest = (token, controller) => new Request(\n  `${process.env.REACT_APP_SERVER}/${controller}`,\n  {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  },\n);\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  tables: {},\n  title: '',\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    save: (state, action) => {\n      const { email, password, token } = action.payload;\n      state.email = email;\n      state.password = password;\n      state.token = token;\n    },\n    changeTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    addTable: (state, action) => {\n      const { tableName, headers, data } = action.payload;\n      state.tables[tableName] = { headers, data };\n    },\n  },\n});\n\nexport const { addTable, changeTitle, save } = userSlice.actions;\n\nexport default userSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  students: [],\n  presentations: [],\n  scores: {},\n};\n\nexport const classroomTableSlice = createSlice({\n  name: 'classroomTable',\n  initialState,\n  reducers: {\n    saveScore: (state, action) => {\n      const {\n        presentation, student, score, id,\n      } = action.payload;\n      state.scores[`${presentation}-${student}`] = { id, score };\n    },\n    saveStudents: (state, action) => {\n      state.students = action.payload;\n    },\n    savePresentations: (state, action) => {\n      state.presentations = action.payload;\n    },\n    saveScores: (state, action) => {\n      action.payload.forEach(\n        (event) => {\n          state.scores[`${event.presentation_id}-${event.student_id}`] = { id: event.id, score: event.score };\n        },\n      );\n    },\n  },\n});\n\nexport const {\n  saveScore, saveScores, saveStudents, savePresentations,\n} = classroomTableSlice.actions;\n\nexport default classroomTableSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './slices/userSlice';\nimport classroomTableReducer from './slices/classroomTableSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    classroomTable: classroomTableReducer,\n  },\n});\n\nexport default store;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './NavBar.scss';\n\nconst NavBar = () => {\n  const title = useSelector((state) => state.user.title);\n\n  const toggleMenu = (e) => {\n    e.preventDefault();\n    const content = document.querySelector('.menu-content');\n    if (content.classList.contains('d-none')) {\n      content.classList.remove('d-none');\n    } else {\n      content.classList.add('d-none');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"nav-bar\">\n        <div className=\"left nav-col ta-left\">\n          <i id=\"menu-toggle\" role=\"menubar\" tabIndex={0} className=\"fas fa-bars\" onKeyDown={(e) => toggleMenu(e)} onClick={(e) => toggleMenu(e)} />\n        </div>\n        <div className=\"center nav-col ta-center\">\n          {title || 'Welcome'}\n        </div>\n        <div className=\"right nav-col ta-right\">\n          <Link to=\"/user/signin\" className=\"link\">\n            <i className=\"fas fa-user\" />\n          </Link>\n        </div>\n      </div>\n      <div className=\"menu-content d-none\">\n        <Link to=\"/classrooms/\" className=\"link\">Classrooms</Link>\n        <Link to=\"/presentation_areas/\" className=\"link\">Curriculum</Link>\n        <Link to=\"/presentation_subareas/\" className=\"link\">Subareas</Link>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","import {\n  signUpRequest, logInRequest, logOutRequest, getIndexRequest, postEventRequest, updateEventRequest,\n} from './requests';\n\nconst displayError = (error) => {\n  const container = document.querySelector('.errors');\n  if (container.innerHTML === '') {\n    const display = document.createElement('h5');\n    display.innerText = error;\n    container.appendChild(display);\n    setTimeout(() => {\n      const container = document.querySelector('.errors');\n      container.innerHTML = '';\n    }, 3000);\n  }\n};\n\nasync function query(request) {\n  try {\n    const response = await fetch(request);\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    displayError(error);\n    return null;\n  }\n}\n\nasync function logIn(email, password) {\n  return query(logInRequest(email, password));\n}\n\nasync function signUp(email, password) {\n  const response = await query(signUpRequest(email, password));\n  return response;\n}\n\nasync function getIndex(token, controller) {\n  const request = getIndexRequest(token, controller);\n  const response = await query(request);\n  return response;\n}\n\nasync function postEvent(token, date, student, presentation, score) {\n  const request = postEventRequest(token, date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function updateEvent(token, id, date, student, presentation, score) {\n  const request = updateEventRequest(token, id, date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function logOut(token, username, password) {\n  return query(logOutRequest(token, username, password));\n}\n\nexport {\n  logIn, signUp, logOut, getIndex, postEvent, updateEvent,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logIn, signUp } from '../../api/queries';\nimport { changeTitle, save } from '../../slices/userSlice';\nimport './UserForm.scss';\n\nconst UserForm = (props) => {\n  const { action } = props;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  async function getLogIn(email, password) {\n    const response = await logIn(email, password);\n    if (response.access_token) {\n      dispatch(save({\n        email,\n        password,\n        token: response.access_token,\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(action));\n  }, []);\n\n  async function getSignUp(email, password) {\n    const response = await signUp(email, password);\n    return (response && getLogIn(email, password));\n  }\n\n  async function submit(event) {\n    event.preventDefault();\n    const { email, password } = event.target;\n\n    if (action === 'Log In') {\n      const response = await getLogIn(email.value, password.value);\n      if (response) history.push('/classrooms/');\n    } else {\n      const response = await (getSignUp(email.value, password.value));\n      if (response) history.push('/classrooms/');\n    }\n    return false;\n  }\n\n  return (\n    <form className=\"user-form table\" onSubmit={(event) => submit(event)}>\n      <section className=\"email\">\n        <label htmlFor=\"email\">\n          Email\n          <input id=\"email\" type=\"text\" />\n        </label>\n      </section>\n      <section className=\"password\">\n        <label htmlFor=\"password\">\n          Password\n          <input id=\"password\" type=\"password\" autoComplete=\"on\" />\n        </label>\n      </section>\n      <section className=\"buttons\">\n        <button className=\"submit\" type=\"submit\">\n          {action}\n        </button>\n        <div className=\"link-container\">\n          {action === 'Log In' ? <Link to=\"/user/signup\" className=\"link\">Sign up</Link> : <Link to=\"/user/signin\" className=\"link\">Log In</Link> }\n        </div>\n      </section>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  action: PropTypes.string.isRequired,\n};\n\nexport default UserForm;\n","import UserForm from '../../containers/UserForm/UserForm';\n\nconst SignIn = () => (\n  <UserForm action=\"Log In\" />\n);\n\nexport default SignIn;\n","import UserForm from '../../containers/UserForm/UserForm';\n\nconst SignUp = () => (\n  <UserForm action=\"Sign Up\" />\n);\n\nexport default SignUp;\n","import { getIndex } from '../../api/queries';\n\nasync function getIndexTable(tableName, token) {\n  const response = await getIndex(token, tableName);\n  return {\n    tableName,\n    data: response,\n  };\n}\n\nasync function requestTable(request, token) {\n  const sections = request.split('/');\n  switch (sections[0]) {\n    case 'classrooms':\n    case 'students':\n    case 'presentation_areas':\n    case 'presentation_subareas': return getIndexTable(request, token);\n    default: return null;\n  }\n}\n\nexport default requestTable;\n","const filterKeys = (array) => array.filter((key) => (!['id', 'created_at', 'updated_at'].includes(key) && !key.endsWith('_id')));\n\nconst getCommands = (table) => {\n  if (table.startsWith('classrooms')) {\n    if (table.includes('/')) {\n      return [{ name: 'scores', route: '/students/:id/scores' }];\n    }\n    return [\n      { name: 'list', route: '/classrooms/:id' },\n      { name: 'scores', route: '/classrooms/:id/scores' },\n    ];\n  }\n\n  if (table.startsWith('presentation_areas')) {\n    if (table.includes('/')) {\n      return [\n        { name: 'list', route: '/presentation_subareas/:id' },\n      ];\n    }\n    return [\n      { name: 'list', route: '/presentation_areas/:id' },\n    ];\n  }\n\n  if (table.startsWith('presentation_subareas')) {\n    if (table.includes('/')) return [];\n    return [\n      { name: 'list', route: '/presentation_subareas/:id' },\n    ];\n  }\n\n  if (table.includes('/')) return [];\n  return [\n    { name: 'list', route: '' },\n  ];\n};\n\nexport { getCommands, filterKeys };\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from './TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport requestTable from './TableQueries';\nimport { addTable, changeTitle } from '../../slices/userSlice';\nimport { filterKeys, getCommands } from './TableUtils';\nimport Row from './Row';\nimport './Table.scss';\n\nconst Table = ({ tableName, id, title }) => {\n  const request = `${tableName}${id ? `/${id}` : ''}`;\n  const commands = getCommands(request);\n  const table = useSelector((state) => state.user.tables[request]);\n  const token = useSelector((state) => state.user.token);\n  const dispatch = useDispatch();\n\n  async function query() {\n    if (!token) return;\n    const response = await requestTable(request, token);\n    if (response && response.data) dispatch(addTable(response));\n  }\n\n  if (!table) query();\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  id: undefined,\n};\n\nTable.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Table;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst Classrooms = () => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Table\n        tableName=\"classrooms\"\n        id={id}\n        title={id ? 'Students' : 'Classrooms'}\n        commands={\n        [\n          {\n            className: 'fas fa-list',\n            route: '/classrooms/:id',\n          },\n          {\n            className: 'fas fa-th',\n            route: '/classrooms/:id/scores',\n          },\n        ]\n        }\n      />\n    </>\n  );\n};\nexport default Classrooms;\n","import Table from '../../containers/Table/Table';\n\nconst Students = () => (\n  <>\n    <Table tableName=\"students\" title=\"Students\" />\n  </>\n);\n\nexport default Students;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationAreas = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table tableName=\"presentation_areas\" id={id} title={id ? 'Presentation Subareas' : 'Presentation Areas'} />\n    </>\n  );\n};\nexport default PresentationAreas;\n","import { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationSubareas = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table tableName=\"presentation_subareas\" id={id} title={id ? 'Presentations' : 'Presentation Subareas'} />\n    </>\n  );\n};\nexport default PresentationSubareas;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst ComboBox = (props) => {\n  const { presentation, student, handleChange } = props;\n  const score = useSelector((state) => state.classroomTable.scores[`${presentation}-${student}`] || 0);\n\n  const getSign = () => {\n    switch (score.score) {\n      case 0: return ' ';\n      case 1: return '/';\n      case 2: return 'ꓥ';\n      case 3: return '𐊅';\n      default: return '';\n    }\n  };\n\n  return (\n    <td>\n      <select className=\"combo\" id={score.id} presentation={presentation} student={student} onChange={(event) => handleChange(event, presentation, student, score.id)} value={getSign()}>\n        <option value=\" \"> </option>\n        <option value=\"/\">/</option>\n        <option value=\"ꓥ\">ꓥ</option>\n        <option value=\"𐊅\">𐊅</option>\n      </select>\n    </td>\n  );\n};\n\nComboBox.propTypes = {\n  presentation: PropTypes.number.isRequired,\n  student: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ComboBox;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ComboBox from './ComboBox';\n\nconst ClassroomRow = ({ presentationId, handleChange }) => {\n  const presentation = useSelector(\n    (state) => state.classroomTable.presentations.filter((value) => value.id === presentationId)[0],\n  );\n  const students = useSelector((state) => state.classroomTable.students);\n\n  return (\n    <>\n      <tr className=\"row\">\n        <td>{presentation.name}</td>\n        {\n        (students || []).map((student) => (\n          <ComboBox\n            key={student.id}\n            presentation={presentationId}\n            student={student.id}\n            handleChange={handleChange}\n          />\n        ))\n        }\n      </tr>\n    </>\n  );\n};\n\nClassroomRow.propTypes = {\n  presentationId: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ClassroomRow;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeTitle } from '../../slices/userSlice';\nimport { getIndex, postEvent, updateEvent } from '../../api/queries';\nimport ClassroomRow from './ClassroomRow';\nimport {\n  saveScore, savePresentations, saveScores, saveStudents,\n} from '../../slices/classroomTableSlice';\nimport './TableClassroomScores.scss';\n\nconst TableClassroomScores = ({ id, title }) => {\n  const request = `classrooms/${id}/scores/`;\n  const table = useSelector((state) => state.classroomTable);\n  const token = useSelector((state) => state.user.token);\n  const dispatch = useDispatch();\n\n  const getScore = (value) => {\n    switch (value) {\n      case ' ': return 0;\n      case '/': return 1;\n      case 'ꓥ': return 2;\n      case '𐊅': return 3;\n      default: return '';\n    }\n  };\n\n  async function requestData() {\n    if (!token) return;\n    const response = {\n      tableName: request,\n      data: await getIndex(token, request),\n    };\n    if (response && response.data) {\n      dispatch(saveStudents(response.data.students));\n      dispatch(savePresentations(response.data.presentations));\n      dispatch(saveScores(response.data.events));\n    }\n  }\n\n  async function updateScore(event, presentation, student, id) {\n    event.preventDefault();\n    const score = getScore(event.target.value);\n    if (!token) return;\n    const response = (!id) ? await postEvent(token, new Date().toISOString().split('T')[0], student, presentation, score)\n      : await updateEvent(token, id, new Date().toISOString().split('T')[0], student, presentation, score);\n\n    if (response) {\n      // id = response;\n      dispatch(saveScore({\n        presentation,\n        student,\n        score,\n      }));\n    }\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table-scores\">\n      {table.students.length > 0 && table.presentations.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-classroom-head\">\n              <tr>\n                {(table.students ? [{ id: 0 }].concat(table.students) : []).map(\n                  (student, index) => (\n                    <th className={`column${index + 1}`} key={student.id}>\n                      <Link to={`/students/${student.id}/scores/`} className=\"head-link\">\n                        {student.name}\n                      </Link>\n                    </th>\n                  ),\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"table-classroom-body\">\n              {\n              (table.presentations ? table.presentations.slice(0, 10) : []).map(\n                (presentation) => (\n                  <ClassroomRow\n                    key={presentation.id}\n                    presentationId={presentation.id}\n                    handleChange={updateScore}\n                  />\n                ),\n              )\n              }\n              {/* table.data.map((row) => <Row key={row.id} data={row} />) */}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableClassroomScores.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default TableClassroomScores;\n","import { useParams } from 'react-router-dom';\nimport TableClassroomScores from '../../containers/TableClassroomScores/TableClassroomScores';\n\nconst ClassroomScores = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableClassroomScores id={id} title=\"Classroom Scores\" />\n    </>\n  );\n};\n\nexport default ClassroomScores;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from '../Table/TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTable, changeTitle } from '../../slices/userSlice';\nimport { getIndex } from '../../api/queries';\nimport { filterKeys, getCommands } from '../Table/TableUtils';\nimport Row from './Row';\nimport '../Table/Table.scss';\n\nconst TableStudentScores = ({ id, title }) => {\n  const request = `students/${id}/scores/`;\n  const commands = getCommands(request);\n  const table = useSelector((state) => state.user.tables[request]);\n  const token = useSelector((state) => state.user.token);\n  const dispatch = useDispatch();\n\n  async function query() {\n    if (!token) return;\n    const response = {\n      tableName: request,\n      data: await getIndex(token, request),\n    };\n    if (response && response.data) dispatch(addTable(response));\n  }\n\n  if (!table) query();\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableStudentScores.defaultProps = {\n  id: undefined,\n};\n\nTableStudentScores.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default TableStudentScores;\n","import { useParams } from 'react-router-dom';\nimport TableStudentScores from '../../containers/TableStudentScores/TableStudentScores';\n\nconst StudentScores = () => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableStudentScores\n        id={id}\n        title=\"Student scores\"\n      />\n    </>\n  );\n};\n\nexport default StudentScores;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './containers/NavBar/NavBar';\nimport SignIn from './routes/SignIn/SignIn';\nimport SignUp from './routes/SignUp/SignUp';\nimport Classrooms from './routes/Classrooms/Classrooms';\nimport Students from './routes/Students/Students';\nimport PresentationAreas from './routes/PresentationAreas/PresentationAreas';\nimport PresentationSubareas from './routes/PresentationSubareas/PresentationSubareas';\nimport ClassroomScores from './routes/ClassroomScores/ClassroomScores';\nimport StudentScores from './routes/StudentScores/StudentScores';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <header>\n      <NavBar />\n      <div className=\"errors\" />\n    </header>\n    <Switch>\n      <Route path=\"/user/signin\"><SignIn /></Route>\n      <Route path=\"/user/signup\"><SignUp /></Route>\n      <Route exact path=\"/classrooms/\"><Classrooms /></Route>\n      <Route exact path=\"/classrooms/:id\"><Classrooms /></Route>\n      <Route exact path=\"/students\"><Students /></Route>\n      <Route exact path=\"/presentation_areas\"><PresentationAreas /></Route>\n      <Route path=\"/presentation_areas/:id\"><PresentationAreas /></Route>\n      <Route exact path=\"/presentation_subareas\"><PresentationSubareas /></Route>\n      <Route path=\"/presentation_subareas/:id\"><PresentationSubareas /></Route>\n      <Route path=\"/classrooms/:id/scores\"><ClassroomScores /></Route>\n      <Route path=\"/students/:id/scores\"><StudentScores /></Route>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}