{"version":3,"sources":["storage/storage.js","api/requests.js","reducers/actions.js","reducers/userReducer.js","reducers/classroomTableReducer.js","constants.js","containers/NavBar/NavBar.js","api/queries.js","containers/UserForm/UserForm.js","routes/SignIn/SignIn.js","routes/SignUp/SignUp.js","containers/Table/TableQueries.js","containers/Table/TableUtils.js","containers/Table/Row.js","containers/Table/Table.js","routes/Classrooms/Classrooms.js","routes/Students/Students.js","components/ErrorDisplayer/ErrorDisplayer.js","routes/PresentationAreas/PresentationAreas.js","routes/PresentationSubareas/PresentationSubareas.js","containers/TableClassroomScores/ComboBox.js","containers/TableClassroomScores/ClassroomRow.js","containers/TableClassroomScores/TableClassroomScores.js","routes/ClassroomScores/ClassroomScores.js","containers/TableStudentScores/Row.js","containers/TableStudentScores/TableStudentScores.js","routes/StudentScores/StudentScores.js","Routes.js","index.js"],"names":["storage","load","localStorage","getItem","JSON","parse","ex","save","token","stringify","require","config","signUpRequest","username","password","Request","process","method","headers","body","logInRequest","logOutRequest","Authorization","Buffer","from","toString","client_id","REACT_APP_CLIENT_ID","client_secret","REACT_APP_CLIENT_SECRET","postEventRequest","date","student","presentation","score","updateEventRequest","id","getIndexRequest","controller","SET_USERNAME","SET_TITLE","SAVE_SCORE","SAVE_SCORES","changeTitle","title","type","payload","saveScore","saveScores","scores","initialState","userReducer","state","action","actions","classroomTableReducer","forEach","event","presentation_id","student_id","REACT_APP_NAME","NavBar","useSelector","toggleMenu","e","preventDefault","content","document","querySelector","classList","contains","remove","add","className","role","tabIndex","onKeyDown","onClick","to","query","request","a","fetch","response","json","logIn","signUp","getIndex","postEvent","updateEvent","UserForm","props","handleError","useState","setPassword","history","useHistory","dispatch","useDispatch","getLogIn","errors","getSignUp","target","value","push","useEffect","handleChange","saveUsername","onSubmit","handleSubmit","htmlFor","onChange","autoComplete","SignIn","setErrors","messages","SignUp","getIndexTable","tableName","data","sections","split","requestTable","filterKeys","array","filter","key","includes","endsWith","getCommands","table","startsWith","name","route","Row","commands","Object","keys","map","index","length","command","replace","Table","setTable","text","charAt","toUpperCase","slice","toLowerCase","trim","row","defaultProps","undefined","Classrooms","useParams","Students","ErrorDisplayer","setMessages","setInterval","clearInterval","Array","message","PresentationAreas","PresentationSubareas","ComboBox","getSign","ClassroomRow","students","TableClassroomScores","setStudents","presentations","setPresentations","getScore","events","eventId","Date","toISOString","requestData","concat","updateScore","ClassroomScores","TableStudentScores","StudentScores","Routes","path","exact","rootReducer","combineReducers","ReactDOM","render","StrictMode","store","createStore","getElementById"],"mappings":"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","file":"static/js/main.4b2a5f21.chunk.js","sourcesContent":["const storageManager = () => {\n  const load = () => {\n    const storage = localStorage.getItem('token');\n\n    try {\n      return storage ? JSON.parse(storage) : [];\n    } catch (ex) {\n      return [];\n    }\n  };\n\n  const save = (token) => {\n    localStorage.token = JSON.stringify(token);\n  };\n\n  return { load, save };\n};\n\nconst storage = storageManager();\n\nexport { storage as default };\n","import storage from '../storage/storage';\n\nrequire('dotenv').config();\n\nexport const signUpRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/users`,\n  {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: `{\n      \"user\" : {\n        \"username\" : \"${username}\",\n        \"password\" : \"${password}\",\n        \"password_confirmation\" : \"${password}\"\n      }\n    }`,\n  },\n);\n\nexport const logInRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/authentications`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n    },\n    body: `{\n      \"username\" : \"${username}\",\n      \"password\" : \"${password}\"\n    }`,\n  },\n);\n\nexport const logOutRequest = (username, password) => new Request(\n  `${process.env.REACT_APP_SERVER}/oauth/revoke`,\n  {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`,\n    },\n    body: JSON.stringify({\n      token: storage.load(),\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\n    }),\n  },\n);\n\nexport const postEventRequest = (date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events`,\n  {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const updateEventRequest = (id, date, student, presentation, score) => new Request(\n  `${process.env.REACT_APP_SERVER}/events/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'content-Type': 'application/json',\n      Authorization: `Bearer ${storage.load()}`,\n    },\n    body: `{\n      \"date\" : \"${date}\",\n      \"student_id\" : ${student},\n      \"presentation_id\" : ${presentation},\n      \"score\" : ${score}\n    }`,\n  },\n);\n\nexport const getIndexRequest = (controller) => new Request(\n  `${process.env.REACT_APP_SERVER}/${controller}`,\n  {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${storage.load()}`,\n    },\n  },\n);\n","export const SET_USERNAME = 'SET_USERNAME';\nexport const SET_TITLE = 'SET_TITLE';\n\nexport const SAVE_SCORE = 'SAVE_SCORE';\nexport const SAVE_SCORES = 'SAVE_SCORES';\n\nexport const saveUsername = (username) => ({\n  type: SET_USERNAME,\n  payload: username,\n});\n\nexport const changeTitle = (title) => ({\n  type: SET_TITLE,\n  payload: title,\n});\n\n/* ------ */\n\nexport const saveScore = (score) => ({\n  type: SAVE_SCORE,\n  payload: score,\n});\n\nexport const saveScores = (scores) => ({\n  type: SAVE_SCORES,\n  payload: scores,\n});\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  username: '',\n  title: '',\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SET_USERNAME: return { ...state, username: action.payload };\n    case actions.SET_TITLE: return { ...state, title: action.payload };\n    default: return state;\n  }\n};\n\nexport default userReducer;\n","/* eslint-disable no-param-reassign */\nimport * as actions from './actions';\n\nconst initialState = {\n  scores: {},\n};\n\nconst classroomTableReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SAVE_SCORE: {\n      const {\n        presentation, student, score, id,\n      } = action.payload;\n      state.scores[`${presentation}-${student}`] = { id, score };\n      return state;\n    }\n    case actions.SAVE_SCORES: {\n      action.payload.forEach(\n        (event) => {\n          state.scores[`${event.presentation_id}-${event.student_id}`] = { id: event.id, score: event.score };\n        },\n      );\n      return state;\n    }\n    default: return state;\n  }\n};\n\nexport default classroomTableReducer;\n","const REACT_APP_NAME = '/school-tracker';\n\nexport default REACT_APP_NAME;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport REACT_APP_NAME from '../../constants';\nimport './NavBar.scss';\n\nconst NavBar = () => {\n  const title = useSelector((state) => state.title);\n\n  const toggleMenu = (e) => {\n    e.preventDefault();\n    const content = document.querySelector('.menu-content');\n    if (content.classList.contains('d-none')) {\n      content.classList.remove('d-none');\n    } else {\n      content.classList.add('d-none');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"nav-bar\">\n        <div className=\"left nav-col ta-left\">\n          <i id=\"menu-toggle\" role=\"menubar\" tabIndex={0} className=\"fas fa-bars\" onKeyDown={(e) => toggleMenu(e)} onClick={(e) => toggleMenu(e)} />\n        </div>\n        <div className=\"center nav-col ta-center\">\n          {title || 'Welcome'}\n        </div>\n        <div className=\"right nav-col ta-right\">\n          <Link to={`${REACT_APP_NAME}/user/signin`} className=\"link\">\n            <i className=\"fas fa-user\" />\n          </Link>\n        </div>\n      </div>\n      <div className=\"menu-content d-none\">\n        <Link to={`${REACT_APP_NAME}/classrooms/`} className=\"link\">Classrooms</Link>\n        <Link to={`${REACT_APP_NAME}/presentation_areas/`} className=\"link\">Curriculum</Link>\n        <Link to={`${REACT_APP_NAME}/presentation_subareas/`} className=\"link\">Subareas</Link>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","import {\n  signUpRequest, logInRequest, logOutRequest, getIndexRequest, postEventRequest, updateEventRequest,\n} from './requests';\n\nasync function query(request) {\n  try {\n    const response = await fetch(request);\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    return null;\n  }\n}\n\nconst logIn = async (username, password) => query(logInRequest(username, password));\n\nasync function signUp(username, password) {\n  const response = await query(signUpRequest(username, password));\n  return response;\n}\n\nasync function getIndex(controller) {\n  const request = getIndexRequest(controller);\n  const response = await query(request);\n  return response;\n}\n\nasync function postEvent(date, student, presentation, score) {\n  const request = postEventRequest(date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function updateEvent(id, date, student, presentation, score) {\n  const request = updateEventRequest(id, date, student, presentation, score);\n  const response = await query(request);\n  return response;\n}\n\nasync function logOut(username, password) {\n  return query(logOutRequest(username, password));\n}\n\nexport {\n  logIn, signUp, logOut, getIndex, postEvent, updateEvent,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logIn, signUp } from '../../api/queries';\nimport { changeTitle, saveUsername } from '../../reducers/actions';\nimport REACT_APP_NAME from '../../constants';\nimport './UserForm.scss';\nimport storage from '../../storage/storage';\n\nconst UserForm = (props) => {\n  const { action, handleError } = props;\n  const username = useSelector((state) => state.userReducer.username);\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  async function getLogIn(username, password) {\n    const response = await logIn(username, password);\n    if (response && response.token) {\n      storage.save(response.token);\n      return true;\n    }\n    handleError(response.errors);\n    return false;\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(action));\n  }, []);\n\n  async function getSignUp(username, password) {\n    const response = await signUp(username, password);\n    if (response && response.username) return (response && getLogIn(username, password));\n    handleError(response.errors);\n    return false;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const { username, password } = event.target;\n\n    if (action === 'Log In') {\n      const response = await getLogIn(username.value, password.value);\n      if (response) {\n        history.push(`${REACT_APP_NAME}/classrooms/`);\n      }\n    } else {\n      const response = await getSignUp(username.value, password.value);\n      if (response) {\n        history.push(`${REACT_APP_NAME}/classrooms/`);\n      }\n    }\n    return false;\n  }\n\n  const handleChange = (event, id) => {\n    event.preventDefault();\n    if (id === 'username') dispatch(saveUsername(event.target.value));\n    else setPassword(event.target.value);\n  };\n\n  return (\n    <form className=\"user-form table\" onSubmit={(event) => handleSubmit(event)}>\n      <section className=\"username\">\n        <label htmlFor=\"username\">\n          Username\n          <input id=\"username\" type=\"text\" value={username} onChange={(event) => handleChange(event, 'username')} />\n        </label>\n      </section>\n      <section className=\"password\">\n        <label htmlFor=\"password\">\n          Password\n          <input id=\"password\" type=\"password\" autoComplete=\"on\" value={password} onChange={(event) => handleChange(event, 'password')} />\n        </label>\n      </section>\n      <section className=\"buttons\">\n        <button className=\"submit\" type=\"submit\">\n          {action}\n        </button>\n        <div className=\"link-container\">\n          {action === 'Log In' ? <Link to={`${REACT_APP_NAME}/user/signup`} className=\"link\">Sign up</Link> : <Link to={`${REACT_APP_NAME}/user/signin`} className=\"link\">Log In</Link> }\n        </div>\n      </section>\n    </form>\n  );\n};\n\nUserForm.propTypes = {\n  action: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default UserForm;\n","import PropTypes from 'prop-types';\nimport UserForm from '../../containers/UserForm/UserForm';\n\nconst SignIn = ({ setErrors }) => (\n  <UserForm action=\"Log In\" handleError={(messages) => setErrors(messages)} />\n);\n\nSignIn.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default SignIn;\n","import PropTypes from 'prop-types';\nimport UserForm from '../../containers/UserForm/UserForm';\n\nconst SignUp = ({ setErrors }) => (\n  <UserForm\n    action=\"Sign Up\"\n    handleError={(messages) => setErrors(messages)}\n  />\n);\n\nSignUp.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default SignUp;\n","import { getIndex } from '../../api/queries';\n\nasync function getIndexTable(tableName) {\n  const response = await getIndex(tableName);\n  return {\n    tableName,\n    data: response,\n  };\n}\n\nasync function requestTable(request) {\n  const sections = request.split('/');\n  switch (sections[0]) {\n    case 'classrooms':\n    case 'students':\n    case 'presentation_areas':\n    case 'presentation_subareas': return getIndexTable(request);\n    default: return null;\n  }\n}\n\nexport default requestTable;\n","import REACT_APP_NAME from '../../constants';\n\nconst filterKeys = (array) => array.filter((key) => (!['id', 'created_at', 'updated_at'].includes(key) && !key.endsWith('_id')));\n\nconst getCommands = (table) => {\n  if (table.startsWith('classrooms')) {\n    if (table.includes('/')) {\n      return [{ name: 'scores', route: `${REACT_APP_NAME}/students/:id` }];\n    }\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/classrooms/:id` },\n      { name: 'scores', route: `${REACT_APP_NAME}/events/:id` },\n    ];\n  }\n\n  if (table.startsWith('presentation_areas')) {\n    if (table.includes('/')) {\n      return [\n        { name: 'list', route: `${REACT_APP_NAME}/presentation_subareas/:id` },\n      ];\n    }\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/presentation_areas/:id` },\n    ];\n  }\n\n  if (table.startsWith('presentation_subareas')) {\n    if (table.includes('/')) return [];\n    return [\n      { name: 'list', route: `${REACT_APP_NAME}/presentation_subareas/:id` },\n    ];\n  }\n\n  if (table.includes('/')) return [];\n  return [\n    { name: 'list', route: '' },\n  ];\n};\n\nexport { getCommands, filterKeys };\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from './TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport requestTable from './TableQueries';\nimport { changeTitle } from '../../reducers/actions';\nimport { filterKeys, getCommands } from './TableUtils';\nimport Row from './Row';\nimport './Table.scss';\n\nconst Table = ({\n  tableName, id, title, handleError,\n}) => {\n  const request = `${tableName}${id ? `/${id}` : ''}`;\n  const commands = getCommands(request);\n  const [table, setTable] = useState([]);\n  const dispatch = useDispatch();\n\n  async function query() {\n    const response = await requestTable(request);\n    if (response && response.data) setTable(response.data);\n    else handleError(response.errors);\n  }\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    query();\n    dispatch(changeTitle(title));\n  }, [request]);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTable.defaultProps = {\n  id: undefined,\n};\n\nTable.propTypes = {\n  tableName: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default Table;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst Classrooms = ({ setErrors }) => {\n  const { id } = useParams();\n\n  return (\n    <>\n      <Table\n        tableName=\"classrooms\"\n        id={id}\n        handleError={(messages) => setErrors(messages)}\n        title={id ? 'Students' : 'Classrooms'}\n        commands={\n        [\n          {\n            className: 'fas fa-list',\n            route: '/classrooms/:id',\n          },\n          {\n            className: 'fas fa-th',\n            route: '/classrooms/:id/scores',\n          },\n        ]\n        }\n      />\n    </>\n  );\n};\n\nClassrooms.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default Classrooms;\n","import PropTypes from 'prop-types';\nimport Table from '../../containers/Table/Table';\n\nconst Students = ({ setErrors }) => (\n  <>\n    <Table\n      tableName=\"students\"\n      title=\"Students\"\n      handleError={(messages) => setErrors(messages)}\n    />\n  </>\n);\n\nStudents.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default Students;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport './ErrorDisplayer.scss';\n\nconst ErrorDisplayer = ({ messages, setMessages }) => {\n  useEffect(() => {\n    if (!messages || messages.length === 0) return null;\n\n    const id = setInterval(() => {\n      setMessages([]);\n    }, 3000);\n    return () => clearInterval(id);\n  });\n\n  const displayErrors = () => {\n    if (messages instanceof Array) {\n      return messages.map((message) => (<p key={message}>{message}</p>));\n    }\n    return messages;\n  };\n\n  return (\n    <div className=\"errors\">\n      {displayErrors()}\n    </div>\n  );\n};\n\nErrorDisplayer.defaultProps = {\n  messages: [],\n};\n\nErrorDisplayer.propTypes = {\n  messages: PropTypes.instanceOf(Object),\n  setMessages: PropTypes.func.isRequired,\n};\n\nexport default ErrorDisplayer;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationAreas = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table\n        tableName=\"presentation_areas\"\n        id={id}\n        title={id ? 'Presentation Subareas' : 'Presentation Areas'}\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nPresentationAreas.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default PresentationAreas;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport Table from '../../containers/Table/Table';\n\nconst PresentationSubareas = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <Table\n        tableName=\"presentation_subareas\"\n        id={id}\n        title={id ? 'Presentations' : 'Presentation Subareas'}\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nPresentationSubareas.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default PresentationSubareas;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst ComboBox = (props) => {\n  const { presentation, student, handleChange } = props;\n  const score = useSelector((state) => state.classroomTableReducer.scores[`${presentation}-${student}`] || 0);\n\n  const getSign = () => {\n    switch (score.score) {\n      case 0: return ' ';\n      case 1: return '/';\n      case 2: return 'ꓥ';\n      case 3: return '𐊅';\n      default: return '';\n    }\n  };\n\n  return (\n    <td>\n      <select className=\"combo\" id={score.id} presentation={presentation} student={student} onChange={(event) => handleChange(event, presentation, student, score.id)} value={getSign()}>\n        <option value=\" \"> </option>\n        <option value=\"/\">/</option>\n        <option value=\"ꓥ\">ꓥ</option>\n        <option value=\"𐊅\">𐊅</option>\n      </select>\n    </td>\n  );\n};\n\nComboBox.propTypes = {\n  presentation: PropTypes.number.isRequired,\n  student: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ComboBox;\n","import PropTypes from 'prop-types';\nimport ComboBox from './ComboBox';\n\nconst ClassroomRow = ({ presentation, students, handleChange }) => (\n  <>\n    <tr className=\"row\">\n      <td>{presentation.name}</td>\n      {\n      (students || []).map((student) => (\n        <ComboBox\n          key={student.id}\n          presentation={presentation.id}\n          student={student.id}\n          handleChange={(event, presentation, student, id) => {\n            handleChange(event, presentation, student, id);\n          }}\n        />\n      ))\n      }\n    </tr>\n  </>\n);\n\nClassroomRow.propTypes = {\n  presentation: PropTypes.instanceOf(Object).isRequired,\n  students: PropTypes.instanceOf(Object).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default ClassroomRow;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  saveScore, saveScores, changeTitle,\n} from '../../reducers/actions';\nimport { getIndex, postEvent, updateEvent } from '../../api/queries';\nimport ClassroomRow from './ClassroomRow';\nimport REACT_APP_NAME from '../../constants';\nimport './TableClassroomScores.scss';\n\nconst TableClassroomScores = ({ id, title, handleError }) => {\n  const request = `events/${id}`;\n  const [students, setStudents] = useState([]);\n  const [presentations, setPresentations] = useState([]);\n  const dispatch = useDispatch();\n\n  const getScore = (value) => {\n    switch (value) {\n      case ' ': return 0;\n      case '/': return 1;\n      case 'ꓥ': return 2;\n      case '𐊅': return 3;\n      default: return '';\n    }\n  };\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) {\n      setStudents(response.data.students);\n      setPresentations(response.data.presentations);\n      dispatch(saveScores(response.data.events));\n    } else handleError(response.errors);\n  }\n\n  async function updateScore(event, presentation, student, eventId) {\n    event.preventDefault();\n    const score = getScore(event.target.value);\n    const response = (!eventId) ? await postEvent(new Date().toISOString().split('T')[0], student, presentation, score)\n      : await updateEvent(eventId, new Date().toISOString().split('T')[0], student, presentation, score);\n\n    if (response) {\n      dispatch(saveScore({\n        id: response.id,\n        presentation,\n        student,\n        score,\n      }));\n    } else handleError(response.errors);\n  }\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table-scores\">\n      {students && students.length > 0 && presentations.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-classroom-head\">\n              <tr>\n                {(students ? [{ id: 0 }].concat(students) : []).map(\n                  (student, index) => (\n                    <th className={`column${index + 1}`} key={student.id}>\n                      <Link to={`${REACT_APP_NAME}/students/${student.id}`} className=\"head-link\">\n                        {student.name}\n                      </Link>\n                    </th>\n                  ),\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"table-classroom-body\">\n              {\n              (presentations ? presentations.slice(0, 10) : []).map(\n                (presentation) => (\n                  <ClassroomRow\n                    key={presentation.id}\n                    presentation={presentation}\n                    students={students}\n                    handleChange={\n                      (event, presentation, student, id) => {\n                        updateScore(event, presentation, student, id);\n                      }\n                    }\n                  />\n                ),\n              )\n              }\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableClassroomScores.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default TableClassroomScores;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport TableClassroomScores from '../../containers/TableClassroomScores/TableClassroomScores';\n\nconst ClassroomScores = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableClassroomScores\n        id={id}\n        title=\"Classroom Scores\"\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nClassroomScores.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default ClassroomScores;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { filterKeys } from '../Table/TableUtils';\n\nconst Row = (props) => {\n  const { data, commands } = props;\n\n  const drawButtons = () => (\n    <td className=\"buttons\">\n      {commands.map((command) => (\n        <Link key={command.name} to={command.route.replace(':id', data.id)} className=\"row-link\">{command.name}</Link>\n      ))}\n    </td>\n  );\n\n  return (\n    <>\n      <tr key={data.id} className=\"row\">\n        {filterKeys(Object.keys(data)).map((key, index) => (\n          <td className={`column${index + 1}`} key={key}>\n            {data[key]}\n          </td>\n        ))}\n        {commands.length !== 0 && drawButtons()}\n      </tr>\n    </>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.instanceOf(Object).isRequired,\n  commands: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTitle } from '../../reducers/actions';\nimport { getIndex } from '../../api/queries';\nimport { filterKeys, getCommands } from '../Table/TableUtils';\nimport Row from './Row';\nimport '../Table/Table.scss';\n\nconst TableStudentScores = ({ id, title, handleError }) => {\n  const request = `/students/${id}`;\n  const commands = getCommands(request);\n  const [table, setTable] = useState([]);\n  const dispatch = useDispatch();\n\n  async function requestData() {\n    const response = {\n      tableName: request,\n      data: await getIndex(request),\n    };\n    if (response && response.data) setTable(response);\n    else handleError(response.errors);\n  }\n\n  const formatColumn = (text) => (text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()).replace('_', ' ').trim();\n\n  useEffect(() => {\n    dispatch(changeTitle(title));\n    requestData();\n  }, []);\n\n  return (\n    <div className=\"container-table\">\n      {table && table.data && table.data.length > 0 && (\n        <div className=\"table\">\n          <table>\n            <thead className=\"table-head\">\n              <tr>\n                {filterKeys(Object.keys(table.data[0])).map((value, index) => (\n                  <th className={`column${index + 1}`} key={value}>{formatColumn(value)}</th>\n                ))}\n                {commands.length > 0 && <th key=\"commands\">Commands</th>}\n              </tr>\n            </thead>\n            <tbody className=\"table-body js-pscroll\">\n              {table.data.map(\n                (row) => (\n                  <Row\n                    key={row.id}\n                    data={row}\n                    commands={commands}\n                  />\n                ),\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTableStudentScores.defaultProps = {\n  id: undefined,\n};\n\nTableStudentScores.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  handleError: PropTypes.func.isRequired,\n};\n\nexport default TableStudentScores;\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport TableStudentScores from '../../containers/TableStudentScores/TableStudentScores';\n\nconst StudentScores = ({ setErrors }) => {\n  const { id } = useParams();\n  return (\n    <>\n      <TableStudentScores\n        id={id}\n        title=\"Student scores\"\n        handleError={(messages) => setErrors(messages)}\n      />\n    </>\n  );\n};\n\nStudentScores.propTypes = {\n  setErrors: PropTypes.func.isRequired,\n};\n\nexport default StudentScores;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './containers/NavBar/NavBar';\nimport SignIn from './routes/SignIn/SignIn';\nimport SignUp from './routes/SignUp/SignUp';\nimport Classrooms from './routes/Classrooms/Classrooms';\nimport Students from './routes/Students/Students';\nimport ErrorDisplayer from './components/ErrorDisplayer/ErrorDisplayer';\nimport PresentationAreas from './routes/PresentationAreas/PresentationAreas';\nimport PresentationSubareas from './routes/PresentationSubareas/PresentationSubareas';\nimport ClassroomScores from './routes/ClassroomScores/ClassroomScores';\nimport StudentScores from './routes/StudentScores/StudentScores';\nimport REACT_APP_NAME from './constants';\n\nconst Routes = () => {\n  const [errors, setErrors] = useState([]);\n\n  return (\n    <BrowserRouter>\n      <header>\n        <NavBar />\n        <ErrorDisplayer messages={errors} setMessages={(messages) => setErrors(messages)} />\n      </header>\n      <Switch>\n        <Route path={`${REACT_APP_NAME}/user/signin`}><SignIn setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route path={`${REACT_APP_NAME}/user/signup`}><SignUp setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route exact path={`${REACT_APP_NAME}/classrooms/`}><Classrooms setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route exact path={`${REACT_APP_NAME}/classrooms/:id`}><Classrooms setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route exact path={`${REACT_APP_NAME}/students`}><Students setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route exact path={`${REACT_APP_NAME}/presentation_areas`}><PresentationAreas setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route path={`${REACT_APP_NAME}/presentation_areas/:id`}><PresentationAreas setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route exact path={`${REACT_APP_NAME}/presentation_subareas`}><PresentationSubareas setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route path={`${REACT_APP_NAME}/presentation_subareas/:id`}><PresentationSubareas setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route path={`${REACT_APP_NAME}/events/:id`}><ClassroomScores setErrors={(messages) => setErrors(messages)} /></Route>\n        <Route path={`${REACT_APP_NAME}/students/:id`}><StudentScores setErrors={(messages) => setErrors(messages)} /></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport userReducer from './reducers/userReducer';\nimport classroomTableReducer from './reducers/classroomTableReducer';\nimport './index.scss';\nimport Routes from './Routes';\n\nconst rootReducer = combineReducers({\n  userReducer,\n  classroomTableReducer,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(rootReducer)}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}